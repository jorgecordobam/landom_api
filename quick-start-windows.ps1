# Script de inicio r√°pido para despliegue de Landom API en EC2 (Windows)
# Email: nuovaiapps@gmail.com
# Autor: Jorge Cordoba

Write-Host "=================================" -ForegroundColor Blue
Write-Host "üöÄ INICIO R√ÅPIDO - LANDOM API EN EC2" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

Write-Host "Email configurado: nuovaiapps@gmail.com" -ForegroundColor Green
Write-Host "Repositorio: https://github.com/jorgecordobam/landom_api" -ForegroundColor Green

# Verificar que estamos en el directorio correcto
if (!(Test-Path "deploy.sh")) {
    Write-Host "‚ùå Este script debe ejecutarse desde el directorio ra√≠z del proyecto" -ForegroundColor Red
    exit 1
}

# Paso 1: Configurar AWS CLI
Write-Host "=================================" -ForegroundColor Blue
Write-Host "PASO 1: CONFIGURANDO AWS CLI" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

if (!(Get-Command aws -ErrorAction SilentlyContinue)) {
    Write-Host "‚ùå AWS CLI no est√° instalado. Ejecutando setup..." -ForegroundColor Red
    .\setup-aws-windows.ps1
} else {
    Write-Host "‚úÖ AWS CLI ya est√° instalado" -ForegroundColor Green
}

# Paso 2: Verificar configuraci√≥n AWS
Write-Host "=================================" -ForegroundColor Blue
Write-Host "PASO 2: VERIFICANDO CONFIGURACI√ìN AWS" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

try {
    $result = aws sts get-caller-identity 2>$null
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ AWS CLI configurado correctamente" -ForegroundColor Green
        Write-Host $result -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå AWS CLI no est√° configurado" -ForegroundColor Red
        Write-Host "Por favor ejecuta: .\setup-aws-windows.ps1" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Host "‚ùå Error al verificar configuraci√≥n AWS" -ForegroundColor Red
    exit 1
}

# Paso 3: Cargar configuraci√≥n personalizada
Write-Host "=================================" -ForegroundColor Blue
Write-Host "PASO 3: CARGANDO CONFIGURACI√ìN" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

if (Test-Path "ec2-config-personalized.sh") {
    Write-Host "‚úÖ Archivo de configuraci√≥n encontrado" -ForegroundColor Green
    
    # Leer configuraci√≥n del archivo
    $configContent = Get-Content "ec2-config-personalized.sh" -Raw
    
    # Extraer variables importantes
    $awsRegion = if ($configContent -match 'AWS_REGION="([^"]+)"') { $matches[1] } else { "us-west-2" }
    $keyPairName = if ($configContent -match 'KEY_PAIR_NAME="([^"]+)"') { $matches[1] } else { "landom-key-pair" }
    $instanceType = if ($configContent -match 'EC2_INSTANCE_TYPE="([^"]+)"') { $matches[1] } else { "t2.micro" }
    $domain = if ($configContent -match 'DOMAIN="([^"]*)"') { $matches[1] } else { "" }
    
    Write-Host "‚úÖ Configuraci√≥n personalizada cargada" -ForegroundColor Green
} else {
    Write-Host "‚ùå Archivo de configuraci√≥n no encontrado" -ForegroundColor Red
    exit 1
}

# Paso 4: Verificar variables cr√≠ticas
Write-Host "=================================" -ForegroundColor Blue
Write-Host "PASO 4: VERIFICANDO CONFIGURACI√ìN" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

Write-Host "üìã Configuraci√≥n actual:" -ForegroundColor Yellow
Write-Host "   üåç Regi√≥n AWS: $awsRegion" -ForegroundColor Cyan
Write-Host "   üîë Key Pair: $keyPairName" -ForegroundColor Cyan
Write-Host "   üñ•Ô∏è  Tipo de instancia: $instanceType" -ForegroundColor Cyan
Write-Host "   üåê Dominio: $domain" -ForegroundColor Cyan
Write-Host "   üìß Email SSL: nuovaiapps@gmail.com" -ForegroundColor Cyan

# Preguntar si quiere continuar
$response = Read-Host "¬øQuieres continuar con esta configuraci√≥n? (y/n)"
if ($response -ne "y" -and $response -ne "Y") {
    Write-Host "Por favor edita ec2-config-personalized.sh y ejecuta este script nuevamente" -ForegroundColor Yellow
    exit 1
}

# Paso 5: Preparar scripts
Write-Host "=================================" -ForegroundColor Blue
Write-Host "PASO 5: PREPARANDO SCRIPTS" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

Write-Host "‚úÖ Scripts listos para ejecuci√≥n" -ForegroundColor Green

# Paso 6: Ejecutar despliegue
Write-Host "=================================" -ForegroundColor Blue
Write-Host "PASO 6: INICIANDO DESPLIEGUE" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

Write-Host "üöÄ Iniciando despliegue de Landom API en EC2..." -ForegroundColor Green
Write-Host "‚è±Ô∏è  Este proceso puede tomar 10-15 minutos..." -ForegroundColor Yellow

# Ejecutar el script de despliegue usando Git Bash o WSL
if (Get-Command bash -ErrorAction SilentlyContinue) {
    Write-Host "Ejecutando con bash..." -ForegroundColor Yellow
    bash deploy.sh
} elseif (Get-Command wsl -ErrorAction SilentlyContinue) {
    Write-Host "Ejecutando con WSL..." -ForegroundColor Yellow
    wsl bash deploy.sh
} else {
    Write-Host "‚ùå No se encontr√≥ bash o WSL" -ForegroundColor Red
    Write-Host "Por favor instala Git Bash o WSL para ejecutar los scripts" -ForegroundColor Yellow
    Write-Host "Git Bash: https://git-scm.com/download/win" -ForegroundColor Yellow
    Write-Host "WSL: https://docs.microsoft.com/en-us/windows/wsl/install" -ForegroundColor Yellow
    exit 1
}

Write-Host "=================================" -ForegroundColor Blue
Write-Host "üéâ DESPLIEGUE COMPLETADO" -ForegroundColor Blue
Write-Host "=================================" -ForegroundColor Blue

Write-Host "‚úÖ Tu aplicaci√≥n Laravel est√° desplegada en EC2!" -ForegroundColor Green
Write-Host "üåê URL: https://$domain" -ForegroundColor Green
Write-Host "üîí SSL: Configurado autom√°ticamente" -ForegroundColor Green
Write-Host "üìß Email de contacto: nuovaiapps@gmail.com" -ForegroundColor Green

Write-Host ""
Write-Host "üìã Comandos √∫tiles:" -ForegroundColor Yellow
Write-Host "   üîç Ver logs: ssh -i ~/.ssh/$keyPairName.pem ubuntu@IP 'docker-compose logs -f'" -ForegroundColor Cyan
Write-Host "   üîÑ Reiniciar: ssh -i ~/.ssh/$keyPairName.pem ubuntu@IP 'docker-compose restart'" -ForegroundColor Cyan
Write-Host "   üíæ Backup: ssh -i ~/.ssh/$keyPairName.pem ubuntu@IP './backup-script.sh'" -ForegroundColor Cyan

Write-Host ""
Write-Host "üìû Soporte:" -ForegroundColor Yellow
Write-Host "   üìß Email: nuovaiapps@gmail.com" -ForegroundColor Cyan
Write-Host "   üìö Documentaci√≥n: README-DEPLOY-EC2.md" -ForegroundColor Cyan

Write-Host ""
Write-Host "‚ö†Ô∏è  IMPORTANTE:" -ForegroundColor Yellow
Write-Host "   - Monitorea los costos en AWS Console" -ForegroundColor Red
Write-Host "   - Configura alertas de CloudWatch" -ForegroundColor Red
Write-Host "   - Haz backups regulares" -ForegroundColor Red
Write-Host "   - Mant√©n la instancia actualizada" -ForegroundColor Red

Write-Host "üéØ ¬°Tu aplicaci√≥n est√° lista para producci√≥n!" -ForegroundColor Green 